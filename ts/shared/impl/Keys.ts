import { Key } from "./Key"
const K = Key.new.bind(Key)
//TODO 未必正確
class Keys{
	constructor(){}
	protected __init__(...args: Parameters<typeof Keys.new>){
		const z = this
		return z
	}

	static new(){
		const z = new this()
		z.__init__()
		return z
	}

	//get This(){return Keys}
	
	readonly A = K("A", 65)
	readonly B = K("B", 66)
	readonly C = K("C", 67)
	readonly D = K("D", 68)
	readonly E = K("E", 69)
	readonly F = K("F", 70)
	readonly G = K("G", 71)
	readonly H = K("H", 72)
	readonly I = K("I", 73)
	readonly J = K("J", 74)
	readonly K = K("K", 75)
	readonly L = K("L", 76)
	readonly M = K("M", 77)
	readonly N = K("N", 78)
	readonly O = K("O", 79)
	readonly P = K("P", 80)
	readonly Q = K("Q", 81)
	readonly R = K("R", 82)
	readonly S = K("S", 83)
	readonly T = K("T", 84)
	readonly U = K("U", 85)
	readonly V = K("V", 86)
	readonly W = K("W", 87)
	readonly X = K("X", 88)
	readonly Y = K("Y", 89)
	readonly Z = K("Z", 90)
	readonly _0 = K("0", 48)
	readonly _1 = K("1", 49)
	readonly _2 = K("2", 50)
	readonly _3 = K("3", 51)
	readonly _4 = K("4", 52)
	readonly _5 = K("5", 53)
	readonly _6 = K("6", 54)
	readonly _7 = K("7", 55)
	readonly _8 = K("8", 56)
	readonly _9 = K("9", 57)
	readonly F1 = K("F1", 112)
	readonly F2 = K("F2", 113)
	readonly F3 = K("F3", 114)
	readonly F4 = K("F4", 115)
	readonly F5 = K("F5", 116)
	readonly F6 = K("F6", 117)
	readonly F7 = K("F7", 118)
	readonly F8 = K("F8", 119)
	readonly F9 = K("F9", 120)
	readonly F10 = K("F10", 121)
	readonly F11 = K("F11", 122)
	readonly F12 = K("F12", 123)
	readonly Backspace = K("Backspace", 8)
	readonly Tab = K("Tab", 9)
	readonly Enter = K("Enter", 13)
	readonly Shift_L = K("Shift_L", 16)
	readonly Shift_R = K("Shift_R", 16)
	readonly Ctrl_L = K("Ctrl_L", 17)
	readonly Ctrl_R = K("Ctrl_R", 17)
	readonly Alt_L = K("Alt", 18)
	readonly Alt_R = K("Alt", 18)
	readonly Pause = K("Pause", 19)
	readonly CapsLock = K("CapsLock", 20)
	readonly Esc = K("Esc", 27)
	readonly Space = K("Space", 32)
	readonly PageUp = K("PageUp", 33)
	readonly PageDown = K("PageDown", 34)
	readonly End = K("End", 35)
	readonly Home = K("Home", 36)
	readonly Left = K("Left", 37)
	readonly Up = K("Up", 38)
	readonly Right = K("Right", 39)
	readonly Down = K("Down", 40)
	readonly Insert = K("Insert", 45)
	readonly Delete = K("Delete", 46)
	readonly NumLock = K("NumLock", 144)
	readonly Numpad0 = K("Numpad0", 96)
	readonly Numpad1 = K("Numpad1", 97)
	readonly Numpad2 = K("Numpad2", 98)
	readonly Numpad3 = K("Numpad3", 99)
	readonly Numpad4 = K("Numpad4", 100)
	readonly Numpad5 = K("Numpad5", 101)
	readonly Numpad6 = K("Numpad6", 102)
	readonly Numpad7 = K("Numpad7", 103)
	readonly Numpad8 = K("Numpad8", 104)
	readonly Numpad9 = K("Numpad9", 105)
	readonly NumpadMultiply = K("NumpadMultiply", 106)
	readonly NumpadAdd = K("NumpadAdd", 107)
	readonly NumpadSubtract = K("NumpadSubtract", 109)
	readonly NumpadDecimal = K("NumpadDecimal", 110)
	readonly NumpadDivide = K("NumpadDivide", 111)
	readonly Semicolon = K("Semicolon", 186)
	readonly Equal = K("Equal", 187)
	readonly Comma = K("Comma", 188)
	readonly Minus = K("Minus", 189)
	readonly Period = K("Period", 190)
	readonly Slash = K("Slash", 191)
	readonly Backquote = K("Backquote", 192)
	readonly BracketLeft = K("BracketLeft", 219)
	readonly Backslash = K("Backslash", 220)
	readonly BracketRight = K("BracketRight", 221)
	readonly Quote = K("Quote", 222)

}


export const keys = Keys.new()